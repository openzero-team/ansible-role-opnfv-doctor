##############################################################################
# Copyright (c) 2017 ZTE Corporation and others.
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Apache License, Version 2.0
# which accompanies this distribution, and is available at
# http://www.apache.org/licenses/LICENSE-2.0
##############################################################################

---
- hosts: doctor-tester

  gather_facts: no

  tasks:

  - name: creating doctor project
    os_project:
      name: "{{ doctor_project }}"
      description: test project for doctor verification
      domain: "{{ doctor_domain }}"
      enabled: true

  - name: creating doctor user
    os_user:
      name: "{{ doctor_user }}"
      password: "{{ doctor_pass }}"
      domain: "{{ doctor_domain }}"
      default_project: "{{ doctor_project }}"

  - name: assigning role to doctor user
    os_user_role:
      user: "{{ doctor_user }}"
      role: "{{ doctor_role }}"
      project: "{{ doctor_project }}"

  - name: adding admin user to doctor project
    os_user_role:
      user: admin
      role: admin
      project: "{{ doctor_project }}"

  - name: creating doctor network
    os_network:
      auth: "{{ doctor_auth }}"
      name: "{{ doctor_network }}"

  - name: creating doctor subnet
    os_subnet:
      auth: "{{ doctor_auth }}"
      name: "{{ doctor_subnet }}"
      cidr: "{{ doctor_cidr }}"
      network_name: "{{ doctor_network }}"
      enable_dhcp: false

  - name: creating doctor servers
    os_server:
      auth: "{{ doctor_auth }}"
      image: cirros-0.3.4-x86_64-uec
      name: "{{ item }}"
      flavor: cirros256
      nics:
        - net-name: "{{ doctor_network }}"
      auto_ip: no
      wait: yes
    with_sequence: start=1 end={{ doctor_server_count|int }} format=doctor-%d
    async: 1800
    poll: 0
    register: doctor_servers

  - name: waiting for doctor servers to be active
    async_status: jid={{ item.ansible_job_id }}
    register: doctor_jobs
    until: doctor_jobs.finished
    retries: 300
    with_items: "{{ doctor_servers.results }}"

  - name: collecting doctor server facts
    os_server_facts:
      auth: "{{ doctor_auth }}"

  # TODO(yujunz) check for existence before create
  - name: creating alarms for server error
    command: >
            aodh alarm create
                 --os-project-name doctor
                 --type event
                 --name "doctor-{{ item.0 }}"
                 --alarm-action "{{ doctor_alarm_action }}"
                 --description "server error"
                 --enabled True
                 --repeat-actions False
                 --severity "moderate"
                 --event-type compute.instance.update
                 --query "traits.state=string::error;traits.instance_id=string::{{ item.1 }}"
    with_indexed_items: "{{ openstack_servers|map(attribute='id')|list }}"
